{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pavan\\\\Desktop\\\\weatherapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState(\"Delhi\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  const currentDate = new Date();\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const month = months[currentDate.getMonth()];\n  const day = currentDate.getDate();\n  const year = currentDate.getFullYear();\n  const formattedDate = `${month} ${day}, ${year}`;\n  const API_KEY = \"bcda10ba323e88e96cb486015a104d1d\"; // Replace 'YOUR_API_KEY' with your actual API key from OpenWeatherMap\n\n  const fetchWeatherData = async () => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await response.json();\n      console.log(data);\n      // if (response.ok) {\n      setWeatherData(data);\n      // setError(null);\n      // } else {\n      //   setError(data.message);\n      //   setWeatherData(null);\n      // }\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      // setError(\"Error fetching weather data. Please try again later.\");\n      // setWeatherData(null);\n    }\n  };\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n  const handleInputChange = event => {\n    setCity(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetchWeatherData();\n  };\n  const getWeatherIconUrl = main => {\n    switch (main) {\n      case \"Clear\":\n        return \"/sun.png\";\n      // Path to your sunny weather icon\n      case \"Rain\":\n        return \"/icons/rainy.png\";\n      // Path to your rainy weather icon\n      case \"Snow\":\n        return \"/icons/snowy.png\";\n      // Path to your snowy weather icon\n      case \"Haze\":\n        return \"/sun.png\";\n      // Path to your haze weather icon\n      // Add more cases for other weather conditions as needed\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"container_date\",\n          children: formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather_data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"container_city\",\n            children: weatherData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"container_img\",\n            src: getWeatherIconUrl(weatherData.weather[0].main),\n            width: \"180px\",\n            alt: \"Weather Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"container_degree\",\n            children: weatherData.main.temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"country_per\",\n            children: [weatherData.weather[0].main, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"degree_icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 72\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"input\",\n              placeholder: \"Enter city name\",\n              value: city,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Get\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"waLao1FzeRwUCJ8qRx2kO6u42VY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","city","setCity","weatherData","setWeatherData","error","setError","currentDate","Date","months","month","getMonth","day","getDate","year","getFullYear","formattedDate","API_KEY","fetchWeatherData","response","fetch","data","json","console","log","handleInputChange","event","target","value","handleSubmit","preventDefault","getWeatherIconUrl","main","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","src","weather","width","alt","temp","onSubmit","type","class","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/pavan/Desktop/weatherapp/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n \nfunction App() {\n  const [city, setCity] = useState(\"Delhi\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n \n  const currentDate = new Date();\n \n  const months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n \n  const month = months[currentDate.getMonth()];\n  const day = currentDate.getDate();\n  const year = currentDate.getFullYear();\n \n  const formattedDate = `${month} ${day}, ${year}`;\n \n  const API_KEY = \"bcda10ba323e88e96cb486015a104d1d\"; // Replace 'YOUR_API_KEY' with your actual API key from OpenWeatherMap\n \n  const fetchWeatherData = async () => {\n    try {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n      );\n      const data = await response.json();\n      console.log(data)\n      // if (response.ok) {\n      setWeatherData(data);\n      // setError(null);\n      // } else {\n      //   setError(data.message);\n      //   setWeatherData(null);\n      // }\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      // setError(\"Error fetching weather data. Please try again later.\");\n      // setWeatherData(null);\n    }\n  };\n \n  useEffect(()=>{\n \n     \n   \n \n  fetchWeatherData();\n \n  },[])\n \n  const handleInputChange = (event) => {\n    setCity(event.target.value);\n  };\n \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetchWeatherData();\n  };\n \n  const getWeatherIconUrl = (main) => {\n    switch (main) {\n      case \"Clear\":\n        return \"/sun.png\"; // Path to your sunny weather icon\n      case \"Rain\":\n        return \"/icons/rainy.png\"; // Path to your rainy weather icon\n      case \"Snow\":\n        return \"/icons/snowy.png\"; // Path to your snowy weather icon\n      case \"Haze\":\n        return \"/sun.png\"; // Path to your haze weather icon\n      // Add more cases for other weather conditions as needed\n      default:\n        return null;\n    }\n  };\n \n \n  return (\n    <div className=\"App\">\n       \n \n      <div className=\"container\">\n        {weatherData && (\n          <>\n            <h1 className=\"container_date\">{formattedDate}</h1>\n            <div className=\"weather_data\">\n              <h2 className=\"container_city\">{weatherData.name}</h2>\n              {/* <img className=\"container_img\" src=\"/thunder.png\" width=\"180px\" alt=\"sss\"/> */}\n              <img className=\"container_img\" src={getWeatherIconUrl(weatherData.weather[0].main)} width=\"180px\" alt=\"Weather Icon\" />\n              <h2 className=\"container_degree\">{weatherData.main.temp}</h2>\n              <h2 className=\"country_per\">{weatherData.weather[0].main}<span className=\"degree_icon\"></span></h2>\n              <form className=\"form\" onSubmit={handleSubmit}>\n                <input\n                  type=\"text\"\n                  class=\"input\"\n                  placeholder=\"Enter city name\"\n                  value={city}\n                  onChange={handleInputChange}\n                  required\n                />\n                <button type=\"submit\">Get</button>\n              </form>\n            </div>\n          </>\n        )}\n \n \n      </div>\n    </div>\n  );\n}\n \nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}